{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u043F\\u0430\\u0448\\u043A\\u043E\\u0432 \\u0434\\u043C\\u0438\\u0442\\u0440\\u0438\\u0439\\\\Documents\\\\GitHub\\\\KanbanHub-frontend\\\\src\\\\pages\\\\KanbanBoard\\\\KanbanBoard.jsx\",\n  _s = $RefreshSig$();\n/* import React, { useState } from \"react\";\r\nimport \"../KanbanBoard/KanbanBoard.css\";\r\nfunction KanbanBoard() {\r\n  const [columns, setColumns] = useState([\r\n    {\r\n      id: 1,\r\n      title: \"сделать\",\r\n      items: [\r\n        { id: 1, title: \"Пойти какать\" },\r\n        { id: 2, title: \"Пойти какать2\" },\r\n      ],\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"какать\",\r\n      items: [\r\n        { id: 3, title: \"Пойти какать3\" },\r\n        { id: 4, title: \"Пойти какать4\" },\r\n      ],\r\n    },\r\n    {\r\n      id: 3,\r\n      title: \"готово\",\r\n      items: [\r\n        { id: 5, title: \"Пойти какать5\" },\r\n        { id: 6, title: \"Пойти какать6\" },\r\n      ],\r\n    },\r\n  ]);\r\n\r\n  const [currentColumn, setCurrentColumn] = useState(null);\r\n  const [currentiIem, setCurretItem] = useState();\r\n\r\n  function dragOverHandler(e) {\r\n    e.preventDefault();\r\n    if (e.target.className == \"item\") {\r\n      e.target.style.boxShadow = \"0 4px 3px gray\";\r\n    }\r\n  }\r\n  function dragLeaveHandler(e) {\r\n    e.target.style.boxShadow = \"none\";\r\n  }\r\n  function dragStartHandler(e, column, item) {\r\n    setCurrentColumn(column);\r\n    setCurrentColumn(item);\r\n  }\r\n  function dragEndHandler(e) {\r\n    e.target.style.boxShadow = \"none\";\r\n  }\r\n  function dropHandler(e, column, item) {\r\n    e.preventDefault();\r\n    const currentIndex = currentColumn.items.indexOf(currentiIem);\r\n    currentColumn.items.splice(currentIndex, 1);\r\n    const dropIndex = currentColumn.items.indexOf(item);\r\n    column.items.splice(dropIndex + 1, 0, currentiIem);\r\n    setColumns(\r\n      column.map((b) => {\r\n        if (b.id === column.id) {\r\n          return column;\r\n        }\r\n        if (b.id === column.id) {\r\n          return currentColumn;\r\n        }\r\n        return b;\r\n      })\r\n    );\r\n  } \r\n\r\n  return (\r\n    <div>\r\n      <div className={\"board\"}>\r\n        {columns.map((column) => (\r\n          <div className={\"column\"}>\r\n            <div className={\"columnTitle\"}>{column.title}</div>\r\n            {column.items.map((item) => (\r\n              <div\r\n                onDragOver={(e) => dragOverHandler(e)}\r\n                onDragLeave={(e) => dragLeaveHandler(e, column, item)}\r\n                onDragStart={(e) => dragStartHandler(e, column, item)}\r\n                onDragEnd={(e) => dragEndHandler(e, column, item)}\r\n                onDrop={(e) => dropHandler(e, column, item)}\r\n                draggable={true}\r\n                className={\"item\"}\r\n              >\r\n                {item.title}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n */\nimport React, { useState } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialData = {\n  columns: {\n    \"column-1\": {\n      id: \"column-1\",\n      title: \"To Do\",\n      taskIds: [\"task-1\", \"task-2\", \"task-3\"]\n    },\n    \"column-2\": {\n      id: \"column-2\",\n      title: \"In Progress\",\n      taskIds: []\n    }\n  },\n  tasks: {\n    \"task-1\": {\n      id: \"task-1\",\n      content: \"Task 1\"\n    },\n    \"task-2\": {\n      id: \"task-2\",\n      content: \"Task 2\"\n    },\n    \"task-3\": {\n      id: \"task-3\",\n      content: \"Task 3\"\n    }\n  }\n};\nconst KanbanBoard = () => {\n  _s();\n  const [data, setData] = useState(initialData);\n  const onDragEnd = result => {\n    const {\n      destination,\n      source,\n      draggableId\n    } = result;\n    if (!destination) {\n      return;\n    }\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n    const start = data.columns[source.droppableId];\n    const finish = data.columns[destination.droppableId];\n    if (start === finish) {\n      const newTaskIds = Array.from(start.taskIds);\n      newTaskIds.splice(source.index, 1);\n      newTaskIds.splice(destination.index, 0, draggableId);\n      const newColumn = {\n        ...start,\n        taskIds: newTaskIds\n      };\n      const newData = {\n        ...data,\n        columns: {\n          ...data.columns,\n          [newColumn.id]: newColumn\n        }\n      };\n      setData(newData);\n    } else {\n      const startTaskIds = Array.from(start.taskIds);\n      startTaskIds.splice(source.index, 1);\n      const newStart = {\n        ...start,\n        taskIds: startTaskIds\n      };\n      const finishTaskIds = Array.from(finish.taskIds);\n      finishTaskIds.splice(destination.index, 0, draggableId);\n      const newFinish = {\n        ...finish,\n        taskIds: finishTaskIds\n      };\n      const newData = {\n        ...data,\n        columns: {\n          ...data.columns,\n          [newStart.id]: newStart,\n          [newFinish.id]: newFinish\n        }\n      };\n      setData(newData);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: Object.keys(data.columns).map(columnId => {\n      const column = data.columns[columnId];\n      const tasks = column.taskIds.map(taskId => data.tasks[taskId]);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: column.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: column.id,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            children: [tasks.map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: task.id,\n              index: index,\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                children: task.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 25\n              }, this)\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 21\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)]\n      }, column.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n};\n_s(KanbanBoard, \"hDGcfQHkZj5ZsEBk8saO8jx9VfY=\");\n_c = KanbanBoard;\nexport default KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","useState","DragDropContext","Draggable","Droppable","jsxDEV","_jsxDEV","initialData","columns","id","title","taskIds","tasks","content","KanbanBoard","_s","data","setData","onDragEnd","result","destination","source","draggableId","droppableId","index","start","finish","newTaskIds","Array","from","splice","newColumn","newData","startTaskIds","newStart","finishTaskIds","newFinish","children","Object","keys","map","columnId","column","taskId","fileName","_jsxFileName","lineNumber","columnNumber","provided","ref","innerRef","droppableProps","task","draggableProps","dragHandleProps","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/пашков дмитрий/Documents/GitHub/KanbanHub-frontend/src/pages/KanbanBoard/KanbanBoard.jsx"],"sourcesContent":["/* import React, { useState } from \"react\";\r\nimport \"../KanbanBoard/KanbanBoard.css\";\r\nfunction KanbanBoard() {\r\n  const [columns, setColumns] = useState([\r\n    {\r\n      id: 1,\r\n      title: \"сделать\",\r\n      items: [\r\n        { id: 1, title: \"Пойти какать\" },\r\n        { id: 2, title: \"Пойти какать2\" },\r\n      ],\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"какать\",\r\n      items: [\r\n        { id: 3, title: \"Пойти какать3\" },\r\n        { id: 4, title: \"Пойти какать4\" },\r\n      ],\r\n    },\r\n    {\r\n      id: 3,\r\n      title: \"готово\",\r\n      items: [\r\n        { id: 5, title: \"Пойти какать5\" },\r\n        { id: 6, title: \"Пойти какать6\" },\r\n      ],\r\n    },\r\n  ]);\r\n\r\n  const [currentColumn, setCurrentColumn] = useState(null);\r\n  const [currentiIem, setCurretItem] = useState();\r\n\r\n  function dragOverHandler(e) {\r\n    e.preventDefault();\r\n    if (e.target.className == \"item\") {\r\n      e.target.style.boxShadow = \"0 4px 3px gray\";\r\n    }\r\n  }\r\n  function dragLeaveHandler(e) {\r\n    e.target.style.boxShadow = \"none\";\r\n  }\r\n  function dragStartHandler(e, column, item) {\r\n    setCurrentColumn(column);\r\n    setCurrentColumn(item);\r\n  }\r\n  function dragEndHandler(e) {\r\n    e.target.style.boxShadow = \"none\";\r\n  }\r\n  function dropHandler(e, column, item) {\r\n    e.preventDefault();\r\n    const currentIndex = currentColumn.items.indexOf(currentiIem);\r\n    currentColumn.items.splice(currentIndex, 1);\r\n    const dropIndex = currentColumn.items.indexOf(item);\r\n    column.items.splice(dropIndex + 1, 0, currentiIem);\r\n    setColumns(\r\n      column.map((b) => {\r\n        if (b.id === column.id) {\r\n          return column;\r\n        }\r\n        if (b.id === column.id) {\r\n          return currentColumn;\r\n        }\r\n        return b;\r\n      })\r\n    );\r\n  } \r\n\r\n  return (\r\n    <div>\r\n      <div className={\"board\"}>\r\n        {columns.map((column) => (\r\n          <div className={\"column\"}>\r\n            <div className={\"columnTitle\"}>{column.title}</div>\r\n            {column.items.map((item) => (\r\n              <div\r\n                onDragOver={(e) => dragOverHandler(e)}\r\n                onDragLeave={(e) => dragLeaveHandler(e, column, item)}\r\n                onDragStart={(e) => dragStartHandler(e, column, item)}\r\n                onDragEnd={(e) => dragEndHandler(e, column, item)}\r\n                onDrop={(e) => dropHandler(e, column, item)}\r\n                draggable={true}\r\n                className={\"item\"}\r\n              >\r\n                {item.title}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n */\r\nimport React, { useState } from \"react\";\r\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\r\n\r\nconst initialData = {\r\n  columns: {\r\n    \"column-1\": {\r\n      id: \"column-1\",\r\n      title: \"To Do\",\r\n      taskIds: [\"task-1\", \"task-2\", \"task-3\"],\r\n    },\r\n    \"column-2\": {\r\n      id: \"column-2\",\r\n      title: \"In Progress\",\r\n      taskIds: [],\r\n    },\r\n  },\r\n  tasks: {\r\n    \"task-1\": { id: \"task-1\", content: \"Task 1\" },\r\n    \"task-2\": { id: \"task-2\", content: \"Task 2\" },\r\n    \"task-3\": { id: \"task-3\", content: \"Task 3\" },\r\n  },\r\n};\r\n\r\nconst KanbanBoard = () => {\r\n  const [data, setData] = useState(initialData);\r\n\r\n  const onDragEnd = (result) => {\r\n    const { destination, source, draggableId } = result;\r\n\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    if (\r\n      destination.droppableId === source.droppableId &&\r\n      destination.index === source.index\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const start = data.columns[source.droppableId];\r\n    const finish = data.columns[destination.droppableId];\r\n\r\n    if (start === finish) {\r\n      const newTaskIds = Array.from(start.taskIds);\r\n      newTaskIds.splice(source.index, 1);\r\n      newTaskIds.splice(destination.index, 0, draggableId);\r\n\r\n      const newColumn = {\r\n        ...start,\r\n        taskIds: newTaskIds,\r\n      };\r\n\r\n      const newData = {\r\n        ...data,\r\n        columns: {\r\n          ...data.columns,\r\n          [newColumn.id]: newColumn,\r\n        },\r\n      };\r\n\r\n      setData(newData);\r\n    } else {\r\n      const startTaskIds = Array.from(start.taskIds);\r\n      startTaskIds.splice(source.index, 1);\r\n      const newStart = {\r\n        ...start,\r\n        taskIds: startTaskIds,\r\n      };\r\n\r\n      const finishTaskIds = Array.from(finish.taskIds);\r\n      finishTaskIds.splice(destination.index, 0, draggableId);\r\n      const newFinish = {\r\n        ...finish,\r\n        taskIds: finishTaskIds,\r\n      };\r\n\r\n      const newData = {\r\n        ...data,\r\n        columns: {\r\n          ...data.columns,\r\n          [newStart.id]: newStart,\r\n          [newFinish.id]: newFinish,\r\n        },\r\n      };\r\n\r\n      setData(newData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      {Object.keys(data.columns).map((columnId) => {\r\n        const column = data.columns[columnId];\r\n        const tasks = column.taskIds.map((taskId) => data.tasks[taskId]);\r\n\r\n        return (\r\n          <div key={column.id}>\r\n            <h2>{column.title}</h2>\r\n            <Droppable droppableId={column.id}>\r\n              {(provided) => (\r\n                <div ref={provided.innerRef} {...provided.droppableProps}>\r\n                  {tasks.map((task, index) => (\r\n                    <Draggable\r\n                      key={task.id}\r\n                      draggableId={task.id}\r\n                      index={index}\r\n                    >\r\n                      {(provided) => (\r\n                        <div\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                        >\r\n                          {task.content}\r\n                        </div>\r\n                      )}\r\n                    </Draggable>\r\n                  ))}\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          </div>\r\n        );\r\n      })}\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\nexport default KanbanBoard;\r\n"],"mappingsvC,SAASC,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5E,MAAMC,WAAW,GAAG;EAClBC,OAAO,EAAE;IACP,UAAU,EAAE;MACVC,EAAE,EAAE,UAAU;MACdC,KAAK,EAAE,OAAO;MACdC,OAAO,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ;IACxC,CAAC;IACD,UAAU,EAAE;MACVF,EAAE,EAAE,UAAU;MACdC,KAAK,EAAE,aAAa;MACpBC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,KAAK,EAAE;IACL,QAAQ,EAAE;MAAEH,EAAE,EAAE,QAAQ;MAAEI,OAAO,EAAE;IAAS,CAAC;IAC7C,QAAQ,EAAE;MAAEJ,EAAE,EAAE,QAAQ;MAAEI,OAAO,EAAE;IAAS,CAAC;IAC7C,QAAQ,EAAE;MAAEJ,EAAE,EAAE,QAAQ;MAAEI,OAAO,EAAE;IAAS;EAC9C;AACF,CAAC;AAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAACM,WAAW,CAAC;EAE7C,MAAMW,SAAS,GAAIC,MAAM,IAAK;IAC5B,MAAM;MAAEC,WAAW;MAAEC,MAAM;MAAEC;IAAY,CAAC,GAAGH,MAAM;IAEnD,IAAI,CAACC,WAAW,EAAE;MAChB;IACF;IAEA,IACEA,WAAW,CAACG,WAAW,KAAKF,MAAM,CAACE,WAAW,IAC9CH,WAAW,CAACI,KAAK,KAAKH,MAAM,CAACG,KAAK,EAClC;MACA;IACF;IAEA,MAAMC,KAAK,GAAGT,IAAI,CAACR,OAAO,CAACa,MAAM,CAACE,WAAW,CAAC;IAC9C,MAAMG,MAAM,GAAGV,IAAI,CAACR,OAAO,CAACY,WAAW,CAACG,WAAW,CAAC;IAEpD,IAAIE,KAAK,KAAKC,MAAM,EAAE;MACpB,MAAMC,UAAU,GAAGC,KAAK,CAACC,IAAI,CAACJ,KAAK,CAACd,OAAO,CAAC;MAC5CgB,UAAU,CAACG,MAAM,CAACT,MAAM,CAACG,KAAK,EAAE,CAAC,CAAC;MAClCG,UAAU,CAACG,MAAM,CAACV,WAAW,CAACI,KAAK,EAAE,CAAC,EAAEF,WAAW,CAAC;MAEpD,MAAMS,SAAS,GAAG;QAChB,GAAGN,KAAK;QACRd,OAAO,EAAEgB;MACX,CAAC;MAED,MAAMK,OAAO,GAAG;QACd,GAAGhB,IAAI;QACPR,OAAO,EAAE;UACP,GAAGQ,IAAI,CAACR,OAAO;UACf,CAACuB,SAAS,CAACtB,EAAE,GAAGsB;QAClB;MACF,CAAC;MAEDd,OAAO,CAACe,OAAO,CAAC;IAClB,CAAC,MAAM;MACL,MAAMC,YAAY,GAAGL,KAAK,CAACC,IAAI,CAACJ,KAAK,CAACd,OAAO,CAAC;MAC9CsB,YAAY,CAACH,MAAM,CAACT,MAAM,CAACG,KAAK,EAAE,CAAC,CAAC;MACpC,MAAMU,QAAQ,GAAG;QACf,GAAGT,KAAK;QACRd,OAAO,EAAEsB;MACX,CAAC;MAED,MAAME,aAAa,GAAGP,KAAK,CAACC,IAAI,CAACH,MAAM,CAACf,OAAO,CAAC;MAChDwB,aAAa,CAACL,MAAM,CAACV,WAAW,CAACI,KAAK,EAAE,CAAC,EAAEF,WAAW,CAAC;MACvD,MAAMc,SAAS,GAAG;QAChB,GAAGV,MAAM;QACTf,OAAO,EAAEwB;MACX,CAAC;MAED,MAAMH,OAAO,GAAG;QACd,GAAGhB,IAAI;QACPR,OAAO,EAAE;UACP,GAAGQ,IAAI,CAACR,OAAO;UACf,CAAC0B,QAAQ,CAACzB,EAAE,GAAGyB,QAAQ;UACvB,CAACE,SAAS,CAAC3B,EAAE,GAAG2B;QAClB;MACF,CAAC;MAEDnB,OAAO,CAACe,OAAO,CAAC;IAClB;EACF,CAAC;EAED,oBACE1B,OAAA,CAACJ,eAAe;IAACgB,SAAS,EAAEA,SAAU;IAAAmB,QAAA,EACnCC,MAAM,CAACC,IAAI,CAACvB,IAAI,CAACR,OAAO,CAAC,CAACgC,GAAG,CAAEC,QAAQ,IAAK;MAC3C,MAAMC,MAAM,GAAG1B,IAAI,CAACR,OAAO,CAACiC,QAAQ,CAAC;MACrC,MAAM7B,KAAK,GAAG8B,MAAM,CAAC/B,OAAO,CAAC6B,GAAG,CAAEG,MAAM,IAAK3B,IAAI,CAACJ,KAAK,CAAC+B,MAAM,CAAC,CAAC;MAEhE,oBACErC,OAAA;QAAA+B,QAAA,gBACE/B,OAAA;UAAA+B,QAAA,EAAKK,MAAM,CAAChC;QAAK;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvBzC,OAAA,CAACF,SAAS;UAACmB,WAAW,EAAEmB,MAAM,CAACjC,EAAG;UAAA4B,QAAA,EAC9BW,QAAQ,iBACR1C,OAAA;YAAK2C,GAAG,EAAED,QAAQ,CAACE,QAAS;YAAA,GAAKF,QAAQ,CAACG,cAAc;YAAAd,QAAA,GACrDzB,KAAK,CAAC4B,GAAG,CAAC,CAACY,IAAI,EAAE5B,KAAK,kBACrBlB,OAAA,CAACH,SAAS;cAERmB,WAAW,EAAE8B,IAAI,CAAC3C,EAAG;cACrBe,KAAK,EAAEA,KAAM;cAAAa,QAAA,EAEXW,QAAQ,iBACR1C,OAAA;gBACE2C,GAAG,EAAED,QAAQ,CAACE,QAAS;gBAAA,GACnBF,QAAQ,CAACK,cAAc;gBAAA,GACvBL,QAAQ,CAACM,eAAe;gBAAAjB,QAAA,EAE3Be,IAAI,CAACvC;cAAO;gBAAA+B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACV;YACN,GAZIK,IAAI,CAAC3C,EAAE;cAAAmC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAaH,CACZ,CAAC,EACDC,QAAQ,CAACO,WAAW;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB;QACN;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACQ,CAAC;MAAA,GAzBJL,MAAM,CAACjC,EAAE;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA0Bd,CAAC;IAEV,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAEtB,CAAC;AAAChC,EAAA,CAzGID,WAAW;AAAA0C,EAAA,GAAX1C,WAAW;AA2GjB,eAAeA,WAAW;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}